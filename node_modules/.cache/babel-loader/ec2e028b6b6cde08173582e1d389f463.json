{"ast":null,"code":"var _jsxFileName = \"/home/samkiller007/Downloads/Projects/Normal/nasa/src/containers/launch/Launch.js\";\nimport React from 'react';\nimport classes from './Launch.module.css';\n\nclass Launch extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null,\n      planets: [{\n        name: \"sun\",\n        x: \"60\",\n        y: \"170\",\n        height: \"120px\",\n        width: \"120px\",\n        img: require('../../res/planets/sun.png')\n      }, {\n        name: \"mercury\",\n        x: \"260\",\n        y: \"212\",\n        height: \"25px\",\n        width: \"25px\",\n        img: require('../../res//planets/mercury.png')\n      }, {\n        name: \"venus\",\n        x: \"310\",\n        y: \"215\",\n        height: \"30px\",\n        width: \"30px\",\n        img: require('../../res//planets/venus.png')\n      }, {\n        name: \"earth\",\n        x: \"380\",\n        y: \"210\",\n        height: \"40px\",\n        width: \"40px\",\n        img: require('../../res//planets/earth.png')\n      }, {\n        name: \"mars\",\n        x: \"410\",\n        y: \"240\",\n        height: \"60px\",\n        width: \"60px\",\n        img: require('../../res//planets/mars.png')\n      }, {\n        name: \"jupiter\",\n        x: \"640\",\n        y: \"210\",\n        height: \"90px\",\n        width: \"90px\",\n        img: require('../../res//planets/jupiter.png')\n      }, {\n        name: \"saturn\",\n        x: \"720\",\n        y: \"80\",\n        height: \"150px\",\n        width: \"150px\",\n        img: require('../../res//planets/saturn.png')\n      }, {\n        name: \"uranus\",\n        x: \"1020\",\n        y: \"140\",\n        height: \"90px\",\n        width: \"90px\",\n        img: require('../../res//planets/uranus.png')\n      }, {\n        name: \"neptune\",\n        x: \"1150\",\n        y: \"200\",\n        height: \"110px\",\n        width: \"80px\",\n        img: require('../../res//planets/neptune.png')\n      }],\n      destination: null\n    };\n\n    this.componentDidMount = () => {\n      var _this$props, _this$props$location;\n\n      this.setState({\n        data: (_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$location = _this$props.location) === null || _this$props$location === void 0 ? void 0 : _this$props$location.state\n      });\n    };\n  }\n\n  render() {\n    var _this$state$planets;\n\n    let destination = this.state.destination;\n    let width = null;\n    let height = null;\n\n    if (destination) {\n      var _destination$width, _destination$width2, _destination$height, _destination$height2;\n\n      width = +((_destination$width = destination.width) === null || _destination$width === void 0 ? void 0 : _destination$width.slice(0, ((_destination$width2 = destination.width) === null || _destination$width2 === void 0 ? void 0 : _destination$width2.length) - 2));\n      height = +((_destination$height = destination.height) === null || _destination$height === void 0 ? void 0 : _destination$height.slice(0, ((_destination$height2 = destination.height) === null || _destination$height2 === void 0 ? void 0 : _destination$height2.length) - 2));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        paddingTop: \"32px\",\n        marginTop: \"0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, \"Launch Page !\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, \" Destination :  \"), destination ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 39\n      }\n    }, destination === null || destination === void 0 ? void 0 : destination.name) : \"Select a Destination on Map\"), /*#__PURE__*/React.createElement(\"svg\", {\n      width: \"100%\",\n      height: \"100%\",\n      className: classes.svg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ellipse\", {\n      cx: \"125\",\n      cy: \"225\",\n      rx: \"150\",\n      ry: \"70\",\n      className: classes.orbit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"ellipse\", {\n      cx: \"125\",\n      cy: \"225\",\n      rx: \"200\",\n      ry: \"90\",\n      className: classes.orbit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"ellipse\", {\n      cx: \"100\",\n      cy: \"225\",\n      rx: \"300\",\n      ry: \"100\",\n      className: classes.orbit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"ellipse\", {\n      cx: \"100\",\n      cy: \"225\",\n      rx: \"370\",\n      ry: \"125\",\n      className: classes.orbit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"ellipse\", {\n      cx: \"100\",\n      cy: \"225\",\n      rx: \"600\",\n      ry: \"160\",\n      className: classes.orbit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"ellipse\", {\n      cx: \"100\",\n      cy: \"225\",\n      rx: \"750\",\n      ry: \"170\",\n      className: classes.orbit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"ellipse\", {\n      cx: \"100\",\n      cy: \"225\",\n      rx: \"1000\",\n      ry: \"180\",\n      className: classes.orbit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"ellipse\", {\n      cx: \"100\",\n      cy: \"225\",\n      rx: \"1100\",\n      ry: \"220\",\n      className: classes.orbit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }), destination ? /*#__PURE__*/React.createElement(\"path\", {\n      d: `M${400},${230} C${400},${230} ${Math.floor(+(destination === null || destination === void 0 ? void 0 : destination.x) + 380) / 2},${Math.max(+(destination === null || destination === void 0 ? void 0 : destination.y), 210) - (100 + 1.6 * width)}  ${+(destination === null || destination === void 0 ? void 0 : destination.x) + width / 2},${+(destination === null || destination === void 0 ? void 0 : destination.y) + height / 2}`,\n      className: classes.route,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 33\n      }\n    }) : null, (_this$state$planets = this.state.planets) === null || _this$state$planets === void 0 ? void 0 : _this$state$planets.map(planet => {\n      return /*#__PURE__*/React.createElement(\"image\", {\n        key: planet === null || planet === void 0 ? void 0 : planet.name,\n        href: planet === null || planet === void 0 ? void 0 : planet.img,\n        x: planet === null || planet === void 0 ? void 0 : planet.x,\n        y: planet === null || planet === void 0 ? void 0 : planet.y,\n        height: planet === null || planet === void 0 ? void 0 : planet.height,\n        width: planet === null || planet === void 0 ? void 0 : planet.width,\n        onClick: () => this.setState({\n          destination: planet\n        }),\n        style: {\n          cursor: \"pointer\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 36\n        }\n      });\n    })));\n  }\n\n}\n\nexport default Launch;","map":{"version":3,"sources":["/home/samkiller007/Downloads/Projects/Normal/nasa/src/containers/launch/Launch.js"],"names":["React","classes","Launch","Component","state","data","planets","name","x","y","height","width","img","require","destination","componentDidMount","setState","props","location","render","slice","length","container","color","paddingTop","marginTop","svg","orbit","Math","floor","max","route","map","planet","cursor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport classes from './Launch.module.css'\n\nclass Launch extends React.Component{\n    state = {\n        data : null,   \n        planets : [\n            {\n                name : \"sun\",\n                x : \"60\",\n                y : \"170\",                \n                height : \"120px\",\n                width: \"120px\",\n                img : require('../../res/planets/sun.png')\n\n            },\n            {\n                name : \"mercury\",\n                x : \"260\",\n                y : \"212\",                \n                height : \"25px\",\n                width: \"25px\",\n                img : require('../../res//planets/mercury.png')\n            },\n            {\n                name : \"venus\",\n                x : \"310\",\n                y : \"215\",                \n                height : \"30px\",\n                width: \"30px\",\n                img : require('../../res//planets/venus.png')\n            },\n            {\n                name : \"earth\",\n                x : \"380\",\n                y : \"210\",                \n                height : \"40px\",\n                width: \"40px\",\n                img : require('../../res//planets/earth.png')\n            },\n            {\n                name : \"mars\",\n                x : \"410\",\n                y : \"240\",                \n                height : \"60px\",\n                width: \"60px\",\n                img : require('../../res//planets/mars.png')\n                \n            },\n            {\n                name : \"jupiter\",\n                x : \"640\",\n                y : \"210\",                \n                height : \"90px\",\n                width: \"90px\",\n                img : require('../../res//planets/jupiter.png')\n            },\n            {\n                name : \"saturn\",\n                x : \"720\",\n                y : \"80\",                \n                height : \"150px\",\n                width: \"150px\",\n                img : require('../../res//planets/saturn.png')\n            },\n            {\n                name : \"uranus\",\n                x : \"1020\",\n                y : \"140\",                \n                height : \"90px\",\n                width: \"90px\",\n                img : require('../../res//planets/uranus.png')\n            },\n            {\n                name : \"neptune\",\n                x : \"1150\",\n                y : \"200\",                \n                height : \"110px\",\n                width: \"80px\",\n                img : require('../../res//planets/neptune.png')\n            }\n\n        ],        \n        destination : null\n    }\n\n    componentDidMount = ()=>{\n        this.setState({ data : this.props?.location?.state})\n    }\n\n    render(){\n\n        let destination = this.state.destination;\n        let width = null;\n        let height = null\n        if( destination){            \n            width = +destination.width?.slice(0,destination.width?.length-2);\n            height = +destination.height?.slice(0,destination.height?.length-2);\n        }\n\n        return(\n            <div className={classes.container}>\n                <center style={{color: \"white\"}}>\n                    <h3 style={{paddingTop:\"32px\", marginTop:\"0\"}}>\n                        Launch Page !\n                    </h3>\n                </center>\n                <div style={{color:\"white\"}}>\n                    <span> Destination :  </span> \n                    {\n                        destination ? <span>{destination?.name}</span> : \"Select a Destination on Map\"\n                    }\n                </div>\n                <svg width=\"100%\" height=\"100%\" className={classes.svg} >                                                       \n                    {/* <path d=\"M0,50 C0,50 500,60  0,150 \" className={classes.orbit}/>\n                    <path d=\"M0,40 C0,40 550,60  0,160 \" className={classes.orbit}/>*/}\n                    \n                    {/* <path fill=\"none\" stroke=\"red\"\n                        d=\"M 0,50\n                        A 150 50 0 1 0 0 0\" /> */}\n                    <ellipse cx=\"125\" cy=\"225\" rx=\"150\" ry=\"70\" className={classes.orbit}/>\n                    <ellipse cx=\"125\" cy=\"225\" rx=\"200\" ry=\"90\" className={classes.orbit}/>\n                    {/* earth */}\n                    <ellipse cx=\"100\" cy=\"225\" rx=\"300\" ry=\"100\" className={classes.orbit}/>\n                    {/* mars */}\n                    <ellipse cx=\"100\" cy=\"225\" rx=\"370\" ry=\"125\" className={classes.orbit}/>                    \n\n                    {/* exo planets */}\n                    <ellipse cx=\"100\" cy=\"225\" rx=\"600\" ry=\"160\" className={classes.orbit}/>\n                    <ellipse cx=\"100\" cy=\"225\" rx=\"750\" ry=\"170\" className={classes.orbit}/>\n                    <ellipse cx=\"100\" cy=\"225\" rx=\"1000\" ry=\"180\" className={classes.orbit}/>\n                    <ellipse cx=\"100\" cy=\"225\" rx=\"1100\" ry=\"220\" className={classes.orbit}/>\n\n\n                    {/* path of rocket */}\n                    {\n                        destination ?\n                                <path \n                                    d={`M${400 },${230} C${400},${230} ${(Math.floor(+destination?.x + 380)/2)},${  Math.max(+destination?.y , 210) - (100 + 1.6* width)}  ${+destination?.x + width/2},${+destination?.y + height/2}`} \n                                    className={classes.route}/> \n                            :\n                                null\n                    }                    \n                    {\n                        this.state.planets?.map( planet =>{\n                            return <image \n                                        key={planet?.name} \n                                        href={planet?.img} \n                                        x={planet?.x} \n                                        y={planet?.y} \n                                        height={planet?.height} \n                                        width={planet?.width} \n                                        onClick={()=> this.setState({destination : planet})}\n                                        style={{cursor:\"pointer\"}}\n                                    />\n                        })\n                    }\n\n                </svg>\n            </div>\n        );\n    }\n}\n\nexport default Launch;"]},"metadata":{},"sourceType":"module"}